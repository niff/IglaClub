@model IglaClub.Web.Models.ViewModels.PairsViewModel

<link href="~/Content/themes/base/jquery.ui.autocomplete.css" rel="stylesheet" />
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" /> @*todo change to local*@
<div class="pairs" id="participantsDiv">
    <p>Pairs list (@Model.PairsInTounament.Count):</p>
    <table class="table table-striped table-hover">
        @{
            var counter = 1;
        }
        @foreach (var pair in @Model.PairsInTounament)
        {            
            var p1Name = (pair.Player1 == null ? "Unknown" : pair.Player1.Name + " (" + pair.Player1.Login + ")");
            var p2Name = (pair.Player2 == null ? "Unknown" : pair.Player2.Name + " (" + pair.Player2.Login + ")");
            <tr>
                <td>@counter .</td>
                <td>
                    @p1Name
                </td>
                <td>
                    @p2Name
                </td>
                <td></td>
                <td>
                    <a href="#" class="removePairLink" onclick="removePair(@Model.Tournament.Id, @pair.Id)">Usuń</a>
                </td>
            </tr>
            counter++;
        }
        <tr>
            <td></td>
            <td><input type="text" name="pairSearch1" id ="pairSearch1" /></td>
            <td><input type="text" name="pairSearch2" id ="pairSearch2" /></td>
            <td class="hidden">
                <input type="hidden" class="hidden user" id ="user1" />
                <input type="hidden" class="hidden user" id ="user2" />
            </td>
            <td><input type="submit" class="pairSearchSubmit btn btn-default btn-small" id ="pairSearchSubmit" value="Add" /></td>
        </tr>
    </table>
    <div id="dialog-form" title="Utwórz użytkownika w systemie IglaClub">
        <form>
            <label for="name">Login</label><input type="text" name="name" id="name" class="text ui-widget-content ui-corner-all" />               
            <label for="email">Email</label><input type="text" name="email" id="email" value="" class="text ui-widget-content ui-corner-all" />               
            <label for="password">Hasło</label><input type="password" name="password" id="password" value="" class="text ui-widget-content ui-corner-all" />
        </form>
    </div>
    </div>

<script type="text/javascript">

    //global
    var whichUserInNewUserDialog = "";
    
    $(document).ready(function () {
        $("#pairSearch1").focus();
        var url = function (request, response) {
            var idOfTriggeringElement = '#' + this.element.attr("id");
            $.getJSON("@Url.Action("SearchUsers")", { phrase: $(idOfTriggeringElement).val(), tournamentId: '@Model.Tournament.Id' },
                function (data) {
                    //if (data.length < 1) {
                        data.push({ value: "Dodaj...", Id: 0 });
                    //}
                    response($.map(data, function (item) {
                        return {
                            label: item.value,
                            id: item.Id
                        };
                    }));
                }
            );
        };
    
        $(function () {
            $("#pairSearch1, #pairSearch2")
                .autocomplete({
                    source: url,
                    messages: {
                        noResults: '',
                        results: ''
                    },
                    minLength: 0,
                    open: function(e, ui) {
                        var idOfTriggeringElement = '#' + this.id;
                        var acData = $(idOfTriggeringElement).data('autocomplete');

                        acData
                            .menu
                            .element
                            .find('a.ui-corner-all')
                            .each(function() {
                                // if ($(this).val() != 0) {
                                var me = $(this);
                                var keywords = acData.term.split(' ').join('|');
                                me.html(me.text().replace(new RegExp("(" + keywords + ")", "gi"), '<b>$1</b>'));
                                // }
                            });
                    },
                    select: function(event, ui) {
                        
                        
                        if (ui.item.id != 0) {
                            var elem = this.id;
                            var sufix = elem.substr((elem.length - 1), 1);
                            var userId = "#user" + sufix;
                            if (ui.item) {
                                $(userId).val(ui.item.id);
                                
                            }
                            
                        } else {
                            $("#dialog-form").dialog("open");
                            whichUserInNewUserDialog = '#' + this.id;
                            $('#name').val($(whichUserInNewUserDialog).val());
                            $('#email').val($(whichUserInNewUserDialog).val());
                            $('#password').val('');
                            return false;
                        }
                        $(this).autocomplete('close');
                        $(this).focus();
                    },
                    focus: function(event, ui) {
                        if (ui.item.value == "Dodaj...") {
                            event.preventDefault();
                            return;}
                    },
                    autoFocus: true,
                    close: function() {
                        $(this).blur();
                    }
                })
                .focus(function() { $(this).autocomplete("search", ""); });
            //.data("autocomplete")._renderItem = function (ul, item) {
            //    var idOfTriggeringElement = '#' + this.id;
            //    return $("<li>")
            //        .append("<a href='#'>" + item.label  + "</a>")
            //        .appendTo(ul);
            //};
        });

        $('#pairSearchSubmit').on("click", function() {
            var user1 = $('#user1').val();
            var user2 = $('#user2').val();
            if (user1 == '' || user2 == '') {
                alert("Nie wybrano użytkownika bądź jest nieprawidłowy");
                return false;
            }
            if (user1 == user2) {
                alert("Wybierz dwóch różnych użytkowników");
                return false;
            }
            $.ajax({
                url: "/Tournament/AddPair",
                type: "POST",
                data: { user1: user1, user2: user2, tournamentId: '@Model.Tournament.Id' },
                success: function (data) {
                    refreshParticipants();
                },
                error: function () {
                    alert("ajax failure");
                }
            });
            clearHiddenUsers();
        });
        

        $( "#dialog-form" ).dialog({
            autoOpen: false,
            height: 300,
            width: 350,
            modal: true,
            buttons: {
                "Dodaj": function() {
                    addUser($('#name').val(), $('#email').val(), $('#password').val());
                                    },
                    "Anuluj": function() {
                        $( this ).dialog( "close" );
                    }
                },
            close: function() {
            }
        });

        function addUser(name, email, password) {
            if (name == '') {
                alert("Name cannot be empty");
                return;
            }
            return $.ajax({
                url: "/Tournament/AddUser",
                type: "POST",
                data: { name: name, email: email, password: password },
                async: false,
                success: addUserSuccess
            }).responseText;
            
        }

        function addUserSuccess(reponse) {
            if (reponse.ErrorStatus != "")
            {
                alert("Error: " + reponse.ErrorStatus);
                return;
                }
            //fill hidden input with id, fill input with name if changed
            var sufix = whichUserInNewUserDialog.substr((whichUserInNewUserDialog.length - 1), 1);
            var idInputForFill = '#user' + sufix;
            $(idInputForFill).val(reponse.Data);

            var nameInputForFill = whichUserInNewUserDialog;
            $(nameInputForFill).val($('#name').val());
            //if create, fill, then search again- > set hidden to null
            $("#dialog-form").dialog("close");
            //clear dialog fields
        }
    });
    
    function removePair(tId, pairId) {
        $('.removePairLink').attr('href','');
        $.ajax({
            url: "/Tournament/RemovePair",
            type: "POST",
            async: false,
            data: { tournamentId: tId, pairId: pairId },
                success: refreshParticipants
        });
    }

    function refreshParticipants() {
        $('#participantsDiv').load('@Url.Action("Pairs", new { tournamentId = @Model.Tournament.Id })');
    }

    function clearHiddenUsers() {
        $('.hidden.user').val('');      
    }

</script>