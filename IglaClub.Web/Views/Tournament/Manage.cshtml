@using IglaClub.ObjectModel.Enums
@model IglaClub.Web.Models.ViewModels.TournamentManageVm

@{
    ViewBag.Title = "Manage tournament " + Model.Tournament.Name;
    
}


    <div class="">
        <p>@Html.ActionLink("Tournaments", "Index") > Manage tournament</p>
        <h3>@Model.Tournament.Name</h3>
    </div>
    <div class="">
        Tournament is <strong>@Model.Tournament.TournamentStatus.ToString() </strong><br />
        @if (Model.Tournament.TournamentStatus == TournamentStatus.Planned && Model.Tournament.PlannedStartDate != null)
        {
            <span><i class="small text-muted">and will start on</i> @Model.Tournament.PlannedStartDate.Value.ToLongDateString() 
                <i class="small text-muted">at</i> @Model.Tournament.PlannedStartDate.Value.ToShortTimeString()</span>
        }
        @if (Model.Tournament.TournamentStatus == TournamentStatus.Started && Model.Tournament.StartDate != null)
        {
            <span><i class="small text-muted">and started on</i> @Model.Tournament.StartDate.Value.ToLongDateString() 
                <i class="small text-muted">at</i> @Model.Tournament.StartDate.Value.ToShortTimeString()</span>
        }
        <div>
            <i class="small text-muted">Tournament owner: </i> @Model.Tournament.Owner.Name @Model.Tournament.Owner.Lastname (@Model.Tournament.Owner.Login)
        </div>
        
            @if (@Model.Tournament.Club != null)
            {<div>
                <i class="small text-muted">Club: </i> @Model.Tournament.Club.Name
            </div>
            }
    
        <a href="@Url.Action("Edit", new { id = Model.Tournament.Id })" class="btn btn-info btn-small">
            <span class="glyphicon glyphicon-pencil"></span>
            Edit
        </a>
        <a href="@Url.Action("Delete", new { id = Model.Tournament.Id })"
           class="btn btn-info btn-small">
            <span class="glyphicon glyphicon-remove"></span>
            Delete
        </a>
        <br />
    </div>
<div class="">
    <div class="row">
        <div class="col-md-6">
            
            @(Model.Tournament.TournamentStatus == TournamentStatus.Planned ?
                  Html.Action("Pairs", new { tournamentId = @Model.Tournament.Id }) :
                  Html.Action("PairsResults", "Results", new { tournamentId = @Model.Tournament.Id }))
            
        </div>
        <div class="col-md-6 text-left action-pane">
            @if (Model.Tournament.TournamentStatus == TournamentStatus.Planned)
            {
                
                    @Html.ActionLink("Start Tournament", "Start", new { id = Model.Tournament.Id }, new { @class = "btn btn-primary" })
                <br />
            }
            @if (Model.Tournament.TournamentStatus == TournamentStatus.Started)
            {
                @Html.ActionLink("Manage results", "Manage", "Results", new { tournamentId = Model.Tournament.Id }, new { @class = "btn btn-primary" })
                <br />

                @Html.ActionLink("Calculate results", "CalculateResults", new { id = Model.Tournament.Id }, new { @class = "btn btn-primary" })
                <br />
                
                if (Model.Tournament.TournamentMovingType == TournamentMovingType.Cavendish)
                {

                    @Html.ActionLink("Generate next round", "GenerateNextRound",
                             new { tournamentId = Model.Tournament.Id, withPairsRepeat = false }, new { @class = "btn btn-primary" })
                    <br />
                }
                else
                {
                    
                    @Html.ActionLink("Move to the next round", "MoveToNextRound",
                         new { tournamentId = Model.Tournament.Id, withPairsRepeat = false }, new { @class = "btn btn-primary" })
                    <br />
                }

            }
            

            @if (Model.Tournament.TournamentStatus == TournamentStatus.Started)
            {
                <br/>
                @Html.Label("Round number: " + Model.Tournament.CurrentRound) <br/>
                
                var resultsLeftClass = Model.ResultsToComplete == 0 ? "text-success" : "text-danger";
                @Html.Label("Results left to complete round: " + Model.ResultsToComplete, new {@class = resultsLeftClass})
                
            }
        </div>
        <div class="col-md-6 action-pane">
            @if (Model.Tournament.TournamentStatus == TournamentStatus.Started)
            {
                @Html.Action("PairRoster", new { tournamentId = @Model.Tournament.Id });
            }
        </div>
    </div>
</div>
