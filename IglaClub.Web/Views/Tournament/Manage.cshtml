@using IglaClub.ObjectModel.Enums
@model IglaClub.Web.Models.ViewModels.TournamentManageVm

@{
    var editResultTitle = "Manage current results: change placing, add/change scores - essential of the tournament directing.";
}

@{
    ViewBag.Title = "Manage tournament " + Model.Tournament.Name;
}
@{
    var status = @Model.Tournament.TournamentStatus;
    bool isStarted = status == TournamentStatus.Started;
    bool isPlanned = status == TournamentStatus.Planned;
    //var statusLabelClass = isPlanned ? "planned" : (isStarted ? "ongoing" : "past");
    //var statusLabel = isPlanned ? "not started" : (isStarted ? "started" : "finished");
    //var resultsLeftClass = Model.Tournament.ResultsNotFinishedInCurrentRound == 0 ? "text-success" : "text-danger"; 
}
    <div class="row">
        <div class="col-md-12 col-xs-12 column-padding">
<div class="col-md-12 col-sm-12 col-xs-12">
    <p>@Html.ActionLink("Tournaments", "Index") > Manage tournament</p>
    <span class="medium-header">
        @Model.Tournament.Name
    </span>
</div>
<div class="col-md-12 col-sm-12 col-xs-12">
    @Html.Partial("_TournamentShortInfo", Model.Tournament)
</div>
@if (isStarted)
{
    <div class="col-md-12">
        <div class="col-md-6 col-sm-6 col-xs-12">
            @{
                var toFinish = Model.Tournament.ResultsNotFinishedInCurrentRound;
                var roundsLeftClass = toFinish > 0 ? "warning" : "success";
            }
            <table class="table table-noborder table-small-padding">
                <tr>
                    <td>
                        <label><span class="label label-default">@Model.Tournament.CurrentRound.</span> round</label>
                    </td>
                    <td>

                        @Html.Partial("_TournamentStartedActions", @Model.Tournament, new ViewDataDictionary { { "notFinishedYet", toFinish > 0 } })
                    </td>
                </tr>
                <tr>
                    <td>
                        <label><span class="label label-@roundsLeftClass">@toFinish</span> results not entered yet </label>
                        @*todo green if rounds 0*@
                    </td>
                    <td>

                        <a href="@Url.Action("Manage", "Results", new { tournamentId = Model.Tournament.Id })" class = "btn btn-default btn-short" title="@editResultTitle">
                            <i class="glyphicon glyphicon-edit right-side-margin"></i>Edit results
                        </a>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="col-md-6 col-sm-12 col-xs-12 action-pane">
        @Html.Action("PairRoster", new { tournamentId = @Model.Tournament.Id })

    </div>
    <div class="col-md-6 col-sm-12 col-xs-12 action-pane">
        @Html.Action("PairsResults", "Results", new { tournamentId = @Model.Tournament.Id })
    </div>
}
@if (isPlanned)
{
    <div class="col-md-12 col-sm-12 col-xs-12">
        @Html.ActionLink("Start Tournament", "Start", new { id = Model.Tournament.Id }, new { @class = "btn btn-success" })
    </div>
    <div class="col-md-6 col-sm-12 col-xs-12 action-pane">
        <div class="pairs" id="participantsDiv">
            @Html.Action("TournamentParticipantsEdit", new { tournamentId = @Model.Tournament.Id })
        </div>
        <div id="quickAddUserDiv">
        @Html.Partial("_QuickAddUser")
            </div>
    </div>           
}
    </div>
    </div>

<script>
//    $(document).ready(function () {
//        $('body a[href]').qtip();
//        $('.btn.btn-default.disabled.btn-short').qtip({
//// Grab some elements to apply the tooltip to
//            content: {
//                text: 'My common piece of text here'
//            }
//        });
//        $(".btn.btn-default.disabled.btn-short").attr("disabled", true)
//   .attr("readonly", true)
//   .parent() // Use the parent element for our qTip binding
//   .qtip({
//       content: $(".btn.btn-default.disabled.btn-short").val(),
//       show: 'mouseover',
//       hide: 'mouseout',
//       position: { corner: { target: 'topRight', tooltip: 'bottomLeft' } },
//       style: {
//           name: 'light'
//       }
//   });
//    });
</script>


