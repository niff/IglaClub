@using System.Globalization
@model IglaClub.Web.Models.ViewModels.PairsViewModel

        @{
            bool userSubscribed = Model.Tournament.UserIsSubscribed(Model.CurrentUser.Login);
            if (!userSubscribed)
            {
                var currentUserId = Model.CurrentUser.Id.ToString(CultureInfo.InvariantCulture);
                var users = new SelectList(Model.AvailableUsers.Where(u => u.Id != Model.CurrentUser.Id).OrderBy(u=>u.DisplayName), "Id", "DisplayName");
    <form class="form-inline">
        <div class="form-group">
            <input type="hidden" id="user1" value="@currentUserId" />
            I want to play with: @Html.DropDownList("user2", users, new { @class = "form-control"})
            <button type="submit" class="btn btn-primary btn-small" id="pairSearchSubmit">Subscribe</button>
        </div>
    </form>
            }
        }
    <p>Pairs list <span class="badge">@Model.PairsInTounament.Count</span></p>
<table class="table table-striped table-hover">
    @{
        var counter = 1;
            //todo add indicator that peerson on the list is me
    }
    @foreach (var pair in @Model.PairsInTounament)
    {            
        var p1Name = (pair.Player1 == null ? "Unknown" : pair.Player1.DisplayName);
        var p2Name = (pair.Player2 == null ? "Unknown" : pair.Player2.DisplayName);
        <tr>
            <td><span>@counter.</span></td>
            <td>
                @p1Name
            </td>
            <td>
                @p2Name
            </td>
            <td>
                @if ((pair.Player1 != null && pair.Player1.Id == Model.CurrentUser.Id)
                     || (pair.Player2!= null && pair.Player2.Id == Model.CurrentUser.Id))
                {
                    <a href = "#" class="removePairLink" data-tournament-id="@Model.Tournament.Id" data-pair-id="@pair.Id" >
                        <i class="glyphicon glyphicon-trash" title="Remove"></i>
                    </a>
                } 
            </td>
        </tr>
        counter++;
    }             
</table>

<script src="~/Scripts/pairs.js"></script>
<script>
    var options = {
        tournamentId: '@Model.Tournament.Id',
        dataUrl: '@Url.Action("PairsList", new { tournamentId = @Model.Tournament.Id })'
    };
    $(this).initializePairsEdit(options);
</script>