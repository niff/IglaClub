@using IglaClub.ObjectModel.Consts
@using IglaClub.ObjectModel.Enums
@using Pair = IglaClub.ObjectModel.Entities.Pair
@model IglaClub.Web.Models.ViewModels.PairsResultsViewModel

<div id="pairsResults" class="pairs">
@{
    var pointsHeader = "Result";
    if (Model.TournamentScoringType == TournamentScoringType.Imps)
    {
        pointsHeader += "(MPs)";
    }
    const string format = "<strong title=\"you\">{0}</strong>";
}
    <span>Results</span>
    <a href="@Url.Action("CalculateResults", "Tournament",new { id = Model.TournamentId})" class = "pull-right">
        <i class="glyphicon glyphicon-refresh"></i> Refresh results
    </a>
    <table class="table table-striped table-hover">
        <tr>
            @*<th></th>*@
            <th>Pair Nr</th><th>Pair</th><th></th><th></th>
            <th>@pointsHeader</th>

        </tr>
        @foreach (Pair pair in Model.PairsInTounament)
        {
            var p1 = pair.Player1;
            var p2 = pair.Player2;
            string p1Name;
            string p2Name;
            
            if (pair.IsByePair)
            {
                p1Name = StringResources.ByePair;
                p2Name = StringResources.ByePair;
            }
            else
            {
                p1Name = (p1 == null ? "Unknown" : //todo why sometimes unknown, and sometimes bye
                    (@Model.CurrentUserLogin == p1.Login) ? String.Format(format, p1.GetDisplayName()) :
                    p1.GetDisplayName());
                p2Name = (p2 == null ? "Unknown" :
                    (@Model.CurrentUserLogin == p2.Login) ? String.Format(format, p2.GetDisplayName()) :
                    p2.GetDisplayName());
            }
            
            int maxPoints = Model.PairNumberMaxPoints.FirstOrDefault(p => p.Key == pair.PairNumber).Value;
            float pairScore = pair.Score;
            <tr>
                <td><span class="label label-default label-light-gray">@pair.PairNumber</span></td>
                <td>
                    @Html.Raw(p1Name)
                </td>
                <td>
                    @Html.Raw(p2Name)
                </td>
                <td></td>
                <td>
                    
                    @if (Model.TournamentScoringType == TournamentScoringType.Imps)
                    {
                        @pairScore
                    }
                    else
                    {
                        var s = pairScore > 0 ? string.Format("{0:P} ({1}/{2})",
                                              maxPoints == 0 ? 0 : pairScore / maxPoints,
                                              pairScore, maxPoints) : "0";                   
                        <span>@s</span>
                    }

                </td>
            </tr>
        }</table>
</div>