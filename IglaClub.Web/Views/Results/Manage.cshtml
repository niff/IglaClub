@model IglaClub.Web.Models.ViewModels.TournamentResultsVm
@using IglaClub.ObjectModel.Enums
@using IglaClub.Web.Controllers;
@using IglaClub.Web.Views.Helpers
@{
    ViewBag.Title = "Tournament results";
}


<h2>Tournament "@Model.Tournament.Name" results</h2>
@{
    var grid = new WebGrid(Model.Results, rowsPerPage: 40);
}
<div>
    <a href="@Url.Action("Manage", "Tournament", new { id = Model.Tournament.Id })" 
        class="btn btn-info btn-small">
        Manage tournament
    </a>

    <a href="@Url.Action("Edit", new { tournamentId = @Model.Tournament.Id })"
        class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-pencil"></span>
        Edit results
    </a>

    <a href="@Url.Action("CalculateResultsComplete", "Tournament", new { id = Model.Tournament.Id })"
        class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-export"></span>
        Calculate results
    </a>
    
    <a href="@Url.Action("CalculateResultsComplete", "Tournament", new { id = Model.Tournament.Id })" class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-export"></span>Calculate results
    </a>

    <a href="@Url.Action("GenerateNextRound", "Tournament", new { tournamentId = Model.Tournament.Id, withPairsRepeat = false })" 
       class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-circle-arrow-right"></span>
        Generate next round - no pairs repeat
    </a>
    <a href="@Url.Action("GenerateNextRound", "Tournament", new { tournamentId = Model.Tournament.Id, withPairsRepeat = true })"
       class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-circle-arrow-right"></span>
        Generate next round with pairs repeat
    </a>
    <a href="@Url.Action("RemoveLastRound", "Results", new { tournamentId = Model.Tournament.Id })"
       class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-remove"></span>
       
        Remove last round
    </a>

</div>


@grid.GetHtml(columns: grid.Columns(
        grid.Column("ResultFinished", header: "Ok", format: @<text>@ResultHelper.GetStringForFinished(@item.ResultNsPoints, @item.PlayedBy)</text>),
        grid.Column("TableNumber",header: "Table Number", format: @<text>@item.TableNumber</text>),
        grid.Column("RoundNumber",header: "Round Number", format: @<text>@item.RoundNumber</text>),
        grid.Column("NsPairNumber",header: "Ns Pair Number", format: @<text>@item.Ns.PairNumber</text>),
        grid.Column("EwPairNumber",header: "Ew Pair Number", format: @<text>@item.Ew.PairNumber</text>),
        grid.Column("BoardNumber",header: "Board Number", format: @<text>@item.Board.BoardNumber</text>),
        grid.Column("ContractLevel",header: "Contract Level", format: @<text>@item.ContractLevel.ToString()</text>),
        grid.Column("ContractColor",header: "Contract Color", format: @<text>@Enum.GetName(typeof(ContractColors), item.ContractColor)</text>),
        grid.Column("IsDoubled",header: "dbl", format: @<text>@ResultHelper.GetStringForDoubledContract(item.ContractDoubled)</text>),
        grid.Column("PlayedBy",header: "Played by", format: @<text>@item.PlayedBy.ToString()</text>),
        grid.Column("NumberOfTricks",header: "Number of Tricks", format: @<text>@item.NumberOfTricks</text>),
        grid.Column("Vulnerable",header: "Vul", format: @<text>@item.Board.BoardDefinition.Vulnerability</text>),
        grid.Column("Remove",header: "Remove result", format: @<text><a href="@Url.Action("Delete", new { id = @item.Id })" title="Remove"><span class="glyphicon glyphicon-remove"></span></a></text>),
        grid.Column("Result",header: "Result", format: @<text>@item.ResultNsPoints</text>),
        grid.Column("ScoreNS",header: "Score NS", format: @<text>@item.ScoreNs</text>),
        grid.Column("ScoreEW",header: "Score EW", format: @<text>@item.ScoreEw</text>)

                                )
                                , rowStyle: "rowStyleOdd", alternatingRowStyle: "rowStyleEven", headerStyle: "headerStyle"
                        )



