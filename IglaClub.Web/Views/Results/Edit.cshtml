@using IglaClub.ObjectModel.Enums
@using IglaClub.ObjectModel.Consts;
@using IglaClub.Web.Helpers.Html
@model List<IglaClub.ObjectModel.Entities.Result>

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var count = @Model.Count;
    var tournamentTitle = @Model.Any() ? @Model.First().Tournament.Name : "";
    var tournamentId = @Model.Any() ? @Model.First().Tournament.Id : 0;
}

<div>
    <a href="@Url.Action("Manage", "Results", new { tournamentId = tournamentId })"
           class="">
        <span class="glyphicon glyphicon-arrow-left"></span>
        quit editing and go back
    </a>
</div>
<span class="medium-header right-side-margin">Edit tournament results</span>
<span class="small-header">@tournamentTitle</span>
@using (Html.BeginForm())
{    
    <button type="submit" class="btn btn-info btn-small" >
        <span class="glyphicon glyphicon-ok right-side-margin"></span>Save        
    </button>
    <button class="btn btn-info btn-small">
        <span class="glyphicon glyphicon-plus-sign"></span>
        @Html.ActionLink("Add new result", "AddNewResult", "Results", new { tournamentId = Model[0].TournamentId }, null)
    </button>

    <div class="field-validation-error defaultMargin">
        @Html.ValidationSummary()
    </div>
    //todo wyswietlic wszystkie rundy
    <table class="result">
        <tr>

            <th>
                @Html.DisplayNameFor(m => m[0].RoundNumber)
            </th>

            <th>
                @Html.DisplayNameFor(m => m[0].TableNumber)
            </th>
            <th>NS @*@Html.DisplayNameFor(m => m[0].NS.PairNumber)*@
            </th>
            <th>EW @*@Html.DisplayNameFor(m => m[0].EW.PairNumber)*@
            </th>
            <th>Board no.@*@Html.DisplayNameFor(m => m[0].Board.BoardNumber)*@
            </th>
            <th>
                @Html.Label("Short form")
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ContractLevel)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ContractColor)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ContractDoubled)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].PlayedBy)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].NumberOfTricks)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ResultNsPoints)
            </th>

            <th>
                @Html.DisplayNameFor(m => m[0].ScoreNs)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ScoreEw)
            </th>
            <th>
                @Html.DisplayNameFor(m => m[0].ResultNsPoints)
            </th>
            <th></th>
        </tr>

        @for (int i = 0; i < @count; i++)
        {
            <tr>
                <td>
                    @Html.TextBoxFor(m => m[i].RoundNumber, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].TableNumber, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].NS.PairNumber, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].EW.PairNumber, new { @class = "form-control" })
                </td>

                <td>
                    @Html.TextBoxFor(m => m[i].Board.BoardNumber, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBox("ShortScore[" + i + "]", "", new { Title = StringResources.ShortScoreTooltip, @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].ContractLevel, new { type = "number", min = "0", max = "7", @class = "form-control" })
                </td>
                <td>
                    @IglaClub.Web.Helpers.Html.TournamentHelper.ContractColorsDropDown("contract-color_" + @i, @Model[i].ContractColor)
                </td>
                <td>
                    @Html.DropDownListFor(m => m[i].ContractDoubled, @TournamentHelper.ContractDoubleSelectList(@Model[i].ContractDoubled), new { @class = "form-control" })
                </td>

                <td>
                    @Html.DropDownListFor(m => m[i].PlayedBy, new SelectList(Enum.GetValues(typeof(NESW)), @Model[i].PlayedBy), new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].NumberOfTricks, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].ResultNsPoints, new { @class = "form-control" })
                </td>

                <td>
                    @Html.TextBoxFor(m => m[i].ScoreNs, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].ScoreEw, new { @class = "form-control" })
                </td>
                <td>
                    @Html.TextBoxFor(m => m[i].ResultNsPoints, new { @class = "form-control" })
                </td>
                <td>
                    <a href="@Url.Action("Delete", new { id = Model[i].Id })" title="Remove"><span class="glyphicon glyphicon-remove"></span></a>
                </td>
                <td>
                    @Html.HiddenFor(m => m[i].TournamentId)
                    @Html.HiddenFor(m => m[i].BoardId)
                    @Html.HiddenFor(m => m[i].Id)
                </td>
            </tr>
        }
    </table>

}

<script src="~/Scripts/jquery.ddslick.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var count = '@count';
        for (var i = 0; i < count ; i++) {
            $('#contract-color_' + i).ddslick();
            //$('#contract-doubled' + i).ddslick();
        }
    });
</script>
